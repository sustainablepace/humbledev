Title:

Getting Acceptance Criteria right with Example Mapping

----

Description:

Getting Acceptance Criteria right with Example Mapping

----

Date:

02/19/2016

----

Tags:

agile,backlog grooming,example mapping,three amigos,acceptance criteria,atdd

----

Text:

I already wrote about the concept of the (link:blog/three-amigos text:Three Amigos), this time I want to share a method to facilitate the refinement of __user stories__ and the creation of __acceptance criteria__, named __Example Mapping__.

The problem with getting user stories and acceptance criteria right is that often there is not enough collaboration - just remember the Agile Principle

> "Business people and developers must work together daily throughout the project."
>
> (link:http://www.agilemanifesto.org/principles.html text:Principles behind the Agile Manifesto)

Example Mapping is an __effective__ and __playful__ way of solving this problem.

## Rules vs. Examples ##

There are different ways to describe acceptance criteria, like rules or examples. While __rules__ are generalizations and by this often broad and ambiguous, __examples__ are specific and easy to understand. Often an underlying rule is not yet clear, while a single example is. 

## Example Mapping ##

The idea of Example Mapping is to create acceptance criteria for __user stories__ by mapping __examples__ to __rules__. By this, you generate better rules and in general, discover issues that are not yet addressed in the story. You write these issues down as __questions__, they can trigger new rules, or are simple a token for deferring the issue.

You need index cards with four colours. Each card corresponds to one of the artifacts mentioned above

> Yellow ↔ Story
> Blue ↔ Rule
> Green ↔ Example
> Red ↔ Question

### Scenario: Parking price calculation ###

Imagine we were to design a machine that calculates the price of parking tickets at the airport. There could be different parking sites like

> Valet parking
> Short term parking
> Long-term parking

with each site having its own set of rules how a ticket price is calculated. 

When discussing the user story "as a user I want use valet parking in order to save time" (__yellow card__), the product owner would for example explain that the price is 6€ for the first hour (a __blue card__), with a maximum of 18€ per day (another __blue card__).

The first obvious example would be parking for 5 hours (__green card__), with a price of 6€, and a blue card for parking a little longer than five hours (another __green card__), with a price of 18€. 

Maybe the amigos (most likely the tester) would address more edge cases, like daylight savings time or overnight parking. The product owner would realize that the story needed refinement: A __red card__ indicating an unresolved question would be created. Then the amigos could improve the existing (or add new) rule and example cards.

Take a look at the photographs (german language):

(image:01.jpg)

(image:02.jpg)

(image:03.jpg)

## Benefit ##

Example mapping __enhances the shared understanding__ of user stories by refining them in __collaboration__. 

The product owner no longer has to make the acceptance criteria up on his own, their __quality increases__, and developers and testers can __estimate with more confidence__.

The rules can be used as a __guidance for an implementation__, while the examples can be used as __templates for test cases__.

Writing on index cards and pinning them on a board is more __fun__ than staring at a screen displaying an issue tracker, there is __more interaction__ and exeryone is in an __active state of mind__.

Maybe try an Example Mapping session in one of your grooming sessions, and find out if it works for you!

## Reference ##

Just read the (link: https://cucumber.io/blog/2015/12/08/example-mapping-introduction text:blog post) by Matt Wynne, the creator of Example Mapping, for a definitive introduction.
